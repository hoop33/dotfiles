module.exports = function (app) {
	return {

		// ALLOW TESLA LOGGING TO BE TURNED OFF IN CONFIG
		log: function (what) {
			if (app.config.logging.console === true) console.log(what);
		},

		emptyObject: function (obj) {
			return !Object.keys(obj).length;
		},

		countObject: function (obj) {
			var count = 0;
			for (var key in obj) {
				if (obj(key)) {
					count++;
				}
			}

			return count;
		},

		"throw": function (num) {
			var code = {
				400: "400 Bad Request",
				401: "401 Unauthorized",
				403: "403 Forbidden",
				404: "404 Not Found",
				405: "405 Method Not Allowed",
				500: "500 Internal Server Error" };

			var err = new Error(code[num]);
			err.code = num;
			err.message = code[num];
			err.status = num;

			return err;
		}

	};
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yd2FybmVyL0Ryb3Bib3gvY29uZmlnLy5hdG9tL3BhY2thZ2VzL3NldGktdWkvZmlsZS10eXBlcy9KYXZhU2NyaXB0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxHQUFHLEVBQUU7QUFFL0IsUUFBTzs7O0FBR04sS0FBRyxFQUFFLFVBQVMsSUFBSSxFQUFFO0FBQ25CLE9BQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxLQUFLLElBQUksRUFBRyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQzdEOztBQUVELGFBQVcsRUFBRSxVQUFTLEdBQUcsRUFBRTtBQUN6QixVQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUM7R0FDakM7O0FBRUQsYUFBVyxFQUFFLFVBQVMsR0FBRyxFQUFFO0FBQzFCLE9BQUksS0FBSyxHQUFHLENBQUMsQ0FBQztBQUNkLFFBQUssSUFBSSxHQUFHLElBQUksR0FBRyxFQUFHO0FBQ3BCLFFBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFO0FBQ1gsVUFBSyxFQUFFLENBQUM7S0FDVDtJQUNGOztBQUVELFVBQU8sS0FBSyxDQUFDO0dBQ2I7O0FBRUQsV0FBTyxVQUFTLEdBQUcsRUFBRTtBQUVwQixPQUFJLElBQUksR0FBRztBQUNWLE9BQUcsRUFBRyxpQkFBaUI7QUFDdkIsT0FBRyxFQUFHLGtCQUFrQjtBQUN4QixPQUFHLEVBQUcsZUFBZTtBQUNyQixPQUFHLEVBQUcsZUFBZTtBQUNyQixPQUFHLEVBQUcsd0JBQXdCO0FBQzlCLE9BQUcsRUFBRywyQkFBMkIsRUFDakMsQ0FBQzs7QUFFRixPQUFJLEdBQUcsR0FBRyxJQUFJLEtBQUssQ0FBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUUsQ0FBQztBQUM3QixNQUFHLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztBQUNmLE1BQUcsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3hCLE1BQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDOztBQUVyQixVQUFPLEdBQUcsQ0FBQztHQUVYOztFQUVELENBQUM7Q0FFRixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9yd2FybmVyL0Ryb3Bib3gvY29uZmlnLy5hdG9tL3BhY2thZ2VzL3NldGktdWkvZmlsZS10eXBlcy9KYXZhU2NyaXB0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXBwKSB7XG5cblx0cmV0dXJuIHtcblxuXHRcdC8vIEFMTE9XIFRFU0xBIExPR0dJTkcgVE8gQkUgVFVSTkVEIE9GRiBJTiBDT05GSUdcblx0XHRsb2c6IGZ1bmN0aW9uKHdoYXQpIHtcblx0XHRcdGlmICggYXBwLmNvbmZpZy5sb2dnaW5nLmNvbnNvbGUgPT09IHRydWUgKSBjb25zb2xlLmxvZyh3aGF0KTtcblx0XHR9LFxuXG5cdFx0ZW1wdHlPYmplY3Q6IGZ1bmN0aW9uKG9iaikge1xuXHRcdCAgcmV0dXJuICFPYmplY3Qua2V5cyhvYmopLmxlbmd0aDtcblx0XHR9LFxuXG5cdFx0Y291bnRPYmplY3Q6IGZ1bmN0aW9uKG9iaikge1xuXHRcdFx0dmFyIGNvdW50ID0gMDtcblx0XHRcdGZvciggdmFyIGtleSBpbiBvYmogKSB7XG5cdFx0XHQgIGlmKG9iaihrZXkpKSB7XG5cdFx0XHQgICAgY291bnQrKztcblx0XHRcdCAgfVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gY291bnQ7XG5cdFx0fSxcblxuXHRcdHRocm93OiBmdW5jdGlvbihudW0pIHtcblxuXHRcdFx0dmFyIGNvZGUgPSB7XG5cdFx0XHRcdDQwMCA6ICc0MDAgQmFkIFJlcXVlc3QnLFxuXHRcdFx0XHQ0MDEgOiAnNDAxIFVuYXV0aG9yaXplZCcsXG5cdFx0XHRcdDQwMyA6ICc0MDMgRm9yYmlkZGVuJyxcblx0XHRcdFx0NDA0IDogJzQwNCBOb3QgRm91bmQnLFxuXHRcdFx0XHQ0MDUgOiAnNDA1IE1ldGhvZCBOb3QgQWxsb3dlZCcsXG5cdFx0XHRcdDUwMCA6ICc1MDAgSW50ZXJuYWwgU2VydmVyIEVycm9yJyxcblx0XHRcdH07XG5cblx0XHRcdHZhciBlcnIgPSBuZXcgRXJyb3IoIGNvZGVbbnVtXSApO1xuXHRcdFx0ICAgIGVyci5jb2RlID0gbnVtO1xuXHRcdFx0ICAgIGVyci5tZXNzYWdlID0gY29kZVtudW1dO1xuXHRcdFx0ICAgIGVyci5zdGF0dXMgPSBudW07XG5cblx0XHRcdHJldHVybiBlcnI7XG5cblx0XHR9XG5cblx0fTtcblxufTtcbiJdfQ==